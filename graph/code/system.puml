@startuml Market Data Processing System - High Level Architecture

!theme plain
skinparam backgroundColor #FFFFFF
skinparam componentStyle rectangle
skinparam packageStyle rectangle

title Market Data Processing System - High Level Architecture

package "Data Layer" {
    component "DBN File" as DBNFile <<file>>
    note right of DBNFile : CLX5_mbo.dbn\nMarket data source
}

package "Core Processing" {
    component "Streamer" as Streamer
    note right of Streamer : File-based data streaming\nDBN file processing
    
    component "Order Book" as OrderBook
    note right of OrderBook : Real-time order book\nBid/Ask management
}

package "Network Communication" {
    component "TCP Sender" as TCPSender
    note right of TCPSender : High-performance server\nStreams market data
    
    component "TCP Receiver" as TCPReceiver
    note right of TCPReceiver : High-performance client\nReceives and processes data
}

package "Applications" {
    component "Sender App" as SenderApp
    note right of SenderApp : TCP_Sender executable\nLoads and streams data
    
    component "Receiver App" as ReceiverApp
    note right of ReceiverApp : TCP_Receiver executable\nProcesses market data
}

package "Support Libraries" {
    component "Databento Lib" as DatabentoLib <<library>>
    note right of DatabentoLib : Market data processing\nDBN format support
    
    component "System Libs" as SystemLib <<library>>
    note right of SystemLib : Networking, I/O\nSocket programming
}

' Main data flow
DBNFile --> Streamer : reads
Streamer --> TCPSender : processes
TCPSender --> TCPReceiver : TCP stream (port 8080)
TCPReceiver --> OrderBook : updates

' Application relationships
SenderApp --> TCPSender : creates
ReceiverApp --> TCPReceiver : creates
ReceiverApp --> OrderBook : creates

' Library dependencies
Streamer --> DatabentoLib : uses
TCPSender --> DatabentoLib : uses
TCPSender --> SystemLib : uses
TCPReceiver --> DatabentoLib : uses
TCPReceiver --> SystemLib : uses

' Network connection
TCPSender -[#blue]-> TCPReceiver : "TCP Connection"

note bottom of TCPSender
  Performance Features:
  - Memory-mapped I/O
  - Zero-copy optimizations
  - Large buffers (16MB)
end note

note bottom of TCPReceiver
  Performance Features:
  - Real-time processing
  - Threaded architecture
  - Statistics tracking
end note

note bottom of OrderBook
  Order Book Features:
  - Bid/Ask level tracking
  - Multi-publisher support
  - Price-time priority
end note

@enduml